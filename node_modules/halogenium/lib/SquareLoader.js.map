{"version":3,"sources":["../src/SquareLoader.jsx"],"names":["keyframes","transform","animationName","propTypes","loading","bool","color","string","size","oneOfType","number","margin","verticalAlign","ptKeys","Object","keys","SquareLoader","getSquareStyle","backgroundColor","props","width","height","getAnimationStyle","animation","join","animationFillMode","perspective","getStyle","i","display","border","renderLoader","assign","klen","length","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;AAGA,IAAMA,YAAY;AAChB,SAAO;AACLC,eAAW;AADN,GADS;AAIhB,SAAO;AACLA,eAAW;AADN,GAJS;AAOhB,SAAO;AACLA,eAAW;AADN,GAPS;AAUhB,UAAQ;AACNA,eAAW;AADL;;AAKV;;;AAfkB,CAAlB,CAkBA,IAAMC,gBAAgB,mCAAoBF,SAApB,CAAtB;;AAEA,IAAMG,YAAY;AAChBC,WAAS,oBAAUC,IADH;AAEhBC,SAAO,oBAAUC,MAFD;AAGhBC,QAAM,oBAAUC,SAAV,CAAoB,CAAE,oBAAUC,MAAZ,EAAoB,oBAAUH,MAA9B,CAApB,CAHU;AAIhBI,UAAQ,oBAAUF,SAAV,CAAoB,CAAE,oBAAUC,MAAZ,EAAoB,oBAAUH,MAA9B,CAApB,CAJQ;AAKhBK,iBAAe,oBAAUH,SAAV,CAAoB,CAAE,oBAAUC,MAAZ,EAAoB,oBAAUH,MAA9B,CAApB;AALC,CAAlB;;AAQA,IAAMM,SAASC,OAAOC,IAAP,CAAYZ,SAAZ,CAAf;;IAEqBa,Y;;;;;;;;;;;;;;kMAenBC,c,GAAiB;AAAA,aAAO;AACtBC,yBAAiB,MAAKC,KAAL,CAAWb,KADN;AAEtBc,eAAO,MAAKD,KAAL,CAAWX,IAFI;AAGtBa,gBAAQ,MAAKF,KAAL,CAAWX,IAHG;AAItBI,uBAAe,MAAKO,KAAL,CAAWP;AAJJ,OAAP;AAAA,K,QAWjBU,iB,GAAoB,YAAM;AACxB,UAAMC,YAAY,CAAErB,aAAF,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,UAA7B,EAAyC,8BAAzC,EAA0EsB,IAA1E,CAA+E,GAA/E,CAAlB;AACA,UAAMC,oBAAoB,MAA1B;AACA,UAAMC,cAAc,OAApB;;AAEA,aAAO;AACLA,gCADK;AAELH,4BAFK;AAGLE;AAHK,OAAP;AAKD,K,QAMDE,Q,GAAW;AAAA,aAAK,kCACV,MAAKV,cAAL,CAAoBW,CAApB,CADU,EAEV,MAAKN,iBAAL,CAAuBM,CAAvB,CAFU,EAGd;AACEC,iBAAS,cADX;AAEEC,gBAAQ,uBAFV,CAEmC;AAFnC,OAHc,CAAL;AAAA,K,QAaXC,Y,GAAe,mBAAW;AACxB,UAAI3B,OAAJ,EAAa;AACX,YAAMe,QAAQL,OAAOkB,MAAP,CAAc,EAAd,EAAkB,MAAKb,KAAvB,CAAd;;AAEA,YAAIhB,aAAaU,MAAjB,EAAyB;AACvB,cAAMoB,OAAOpB,OAAOqB,MAApB;AACA,eAAK,IAAIN,IAAI,CAAb,EAAgBA,IAAIK,IAApB,EAA0BL,GAA1B,EAA+B;AAC7B,mBAAOT,MAAMN,OAAOe,CAAP,CAAN,CAAP;AACD;AACF;;AAED,eACE;AAAA;AAAST,eAAT;AACE,iDAAK,OAAO,MAAKQ,QAAL,EAAZ;AADF,SADF;AAKD;;AAED,aAAO,IAAP;AACD,K;;AAzEC;;;;;AAWA;;;;;AAUA;;;;;;AAgBA;;;;;;AAaA;;;;;;;;6BAyBO;AACP,aAAO,KAAKI,YAAL,CAAkB,KAAKZ,KAAL,CAAWf,OAA7B,CAAP;AACD;;;;;;AA9EkBY,Y,CAIZb,S,GAAYA,S;AAJAa,Y,CAMZmB,Y,GAAe;AACpB/B,WAAS,IADW;AAEpBE,SAAO,SAFa;AAGpBE,QAAM,MAHc,E;kBANHQ,Y","file":"SquareLoader.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport assign from 'domkit/appendVendorPrefix'\nimport insertKeyframesRule from 'domkit/insertKeyframesRule'\n\n/**\n * @type {Object}\n */\nconst keyframes = {\n  '25%': {\n    transform: 'rotateX(180deg) rotateY(0)',\n  },\n  '50%': {\n    transform: 'rotateX(180deg) rotateY(180deg)',\n  },\n  '75%': {\n    transform: 'rotateX(0) rotateY(180deg)',\n  },\n  '100%': {\n    transform: 'rotateX(0) rotateY(0)',\n  },\n}\n\n/**\n * @type {String}\n */\nconst animationName = insertKeyframesRule(keyframes)\n\nconst propTypes = {\n  loading: PropTypes.bool,\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n  margin: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n  verticalAlign: PropTypes.oneOfType([ PropTypes.number, PropTypes.string ]),\n}\n\nconst ptKeys = Object.keys(propTypes)\n\nexport default class SquareLoader extends Component {\n    /**\n     * @type {Object}\n     */\n  static propTypes = propTypes;\n\n  static defaultProps = {\n    loading: true,\n    color: '#ffffff',\n    size: '50px',\n  }\n\n    /**\n     * @return {Object}\n     */\n  getSquareStyle = () => ({\n    backgroundColor: this.props.color,\n    width: this.props.size,\n    height: this.props.size,\n    verticalAlign: this.props.verticalAlign,\n  })\n\n    /**\n     * @param  {Number} i\n     * @return {Object}\n     */\n  getAnimationStyle = () => {\n    const animation = [ animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)' ].join(' ')\n    const animationFillMode = 'both'\n    const perspective = '100px'\n\n    return {\n      perspective,\n      animation,\n      animationFillMode,\n    }\n  }\n\n    /**\n     * @param  {Number} i\n     * @return {Object}\n     */\n  getStyle = i => assign(\n        this.getSquareStyle(i),\n        this.getAnimationStyle(i),\n    {\n      display: 'inline-block',\n      border: '0px solid transparent', // fix firefox/chrome/opera rendering\n    },\n    )\n\n    /**\n     * @param  {Boolean} loading\n     * @return {ReactComponent || null}\n     */\n  renderLoader = loading => {\n    if (loading) {\n      const props = Object.assign({}, this.props)\n\n      if (propTypes && ptKeys) {\n        const klen = ptKeys.length\n        for (let i = 0; i < klen; i++) {\n          delete props[ptKeys[i]]\n        }\n      }\n\n      return (\n        <div {...props}>\n          <div style={this.getStyle()} />\n        </div>\n      )\n    }\n\n    return null\n  }\n\n  render() {\n    return this.renderLoader(this.props.loading)\n  }\n}\n"]}